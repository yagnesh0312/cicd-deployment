apiVersion: v1
kind: Namespace
metadata:
  name: database
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo-sc  # Removed namespace, as StorageClass is cluster-wide
parameters:
  type: local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-1 # PV name should match the PVC name in StatefulSet
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce  # Changed from ReadWriteOnce (hostPath does not support RWX)
  hostPath:
    path: /home/kuser/volumes/mongodb1
  storageClassName: mongo-sc
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - master
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-2 # PV name should match the PVC name in StatefulSet
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce  # Changed from ReadWriteOnce (hostPath does not support RWX)
  hostPath:
    path: /home/kuser/volumes/mongodb2
  storageClassName: mongo-sc
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - master
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-3 # PV name should match the PVC name in StatefulSet
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce  # Changed from ReadWriteOnce (hostPath does not support RWX)
  hostPath:
    path: /home/kuser/volumes/mongodb3
  storageClassName: mongo-sc
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: database
  name: mongo-server
spec:
  selector:
    matchLabels:
      app: mongo-server
  serviceName: mongo-service
  replicas: 3
  volumeClaimTemplates:
    - metadata:
        name: mongo-data  # PVC name must match PV for binding
      spec:
        accessModes:
          - ReadWriteOnce  # Changed from ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: mongo-sc  # Ensure the same StorageClass is used
  template:
    metadata:
      labels:
        app: mongo-server
    spec:
      containers:
        - name: mongo-server
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
  namespace: database
  name: mongo-service
spec:
  selector:
    statefulset.kubernetes.io/pod-name: mongo-server-0
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 30017
  type: NodePort

