"Test case ID","Test case description","Prerequisites","Test steps","Test data","Expected Result","Actual Result","Status","Created By","Date of creation","Executed By","Date of execution"
"TC001","Validate workflow triggers on push with tags matching v1.*.*","GitHub repository with workflow file configured","1. Push a tag matching v1.0.0 to the repository. 2. Observe if the workflow is triggered.","Tag: v1.0.0","Workflow is triggered successfully","","","","",""
"TC002","Validate workflow triggers on workflow_dispatch","GitHub repository with workflow file configured","1. Manually trigger the workflow using the GitHub Actions UI. 2. Observe if the workflow is triggered.","N/A","Workflow is triggered successfully","","","","",""
"TC003","Validate Docker image build and test execution","Docker installed on the runner","1. Push a tag to trigger the workflow. 2. Observe if the Docker image is built successfully. 3. Verify that the container runs and tests are executed.","Dockerfile and test scripts","Docker image is built, container runs, and tests pass successfully","","","","",""
"TC004","Validate Docker image version uniqueness in the registry","Docker registry credentials configured in GitHub secrets","1. Push a tag that already exists in the Docker registry. 2. Observe if the workflow fails with an appropriate error message.","Existing tag: v1.0.0","Workflow fails with the error: 'Image version already exists in the registry.'","","","","",""
"TC005","Validate Docker login to the Harbor registry","Valid Harbor registry credentials configured in GitHub secrets","1. Push a tag to trigger the workflow. 2. Observe if the docker login step succeeds.","Harbor credentials: DOCKER_USERNAME, DOCKER_PASSWORD","Docker login is successful, and subsequent steps proceed","","","","",""
"TC006","Validate old Docker image removal from the registry","An existing Docker image with the latest tag in the registry","1. Push a tag to trigger the workflow. 2. Observe if the old Docker image is removed successfully.","Existing image: latest","Old Docker image is removed successfully","","","","",""
"TC007","Validate new Docker image build and tagging","Docker installed on the runner","1. Push a tag to trigger the workflow. 2. Observe if the new Docker image is built and tagged with latest and the release version.","Release version: v1.0.0","Docker image is built and tagged successfully","","","","",""
"TC008","Validate new Docker image push to the registry","Docker registry credentials configured in GitHub secrets","1. Push a tag to trigger the workflow. 2. Observe if the new Docker image is pushed to the registry with both latest and release version tags.","Release version: v1.0.0","Docker image is pushed to the registry successfully","","","","",""
"TC009","Validate Google Cloud authentication","Valid Google Cloud credentials configured in GitHub secrets","1. Push a tag to trigger the workflow. 2. Observe if the Google Cloud authentication step succeeds.","Google Cloud credentials: PUBSUB_CREDENTIALS","Google Cloud authentication is successful","","","","",""
"TC010","Validate Pub/Sub message publishing to Google Cloud","Valid Google Cloud credentials and Pub/Sub topic configured in GitHub secrets","1. Push a tag to trigger the workflow. 2. Observe if a message is published to the specified Pub/Sub topic.","Pub/Sub topic: PUBSUB_TOPIC","Message is published to the Pub/Sub topic successfully","","","","",""
"TC011","Validate cleanup of Docker images after workflow execution","Docker installed on the runner","1. Push a tag to trigger the workflow. 2. Observe if the Docker images used during the workflow are removed after execution.","Docker images: latest, v1.0.0","Docker images are removed successfully after workflow execution","","","","",""
"TC012","Validate environment variables are passed correctly to the Docker container","Environment variables configured in GitHub secrets","1. Push a tag to trigger the workflow. 2. Observe if the environment variables are passed correctly to the Docker container during the test execution step.","Environment variables: MONGO_CONN_STRING, MONGO_DB_NAME, MONGO_COLLECTION_NAME, PORT, SECRET_KEY","Environment variables are passed correctly, and the container runs successfully","","","","",""
"TC013","Validate workflow failure when a step fails","GitHub repository with workflow file configured","1. Introduce an error in one of the steps (e.g., invalid Dockerfile). 2. Push a tag to trigger the workflow. 3. Observe if the workflow fails and stops execution at the failing step.","Invalid Dockerfile","Workflow fails at the step with the error, and subsequent steps are not executed","","","","",""