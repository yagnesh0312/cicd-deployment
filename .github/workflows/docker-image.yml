name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: "Enter version number (e.g., 1.0.0)"
        required: false

jobs:
  build:
    runs-on: self-hosted 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Load Version from .env
        id: load_version
        run: |
          VERSION=$(grep '^VERSION=' .env | cut -d '=' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Loaded Version: $VERSION"

      - name: Check if Version Already Exists
        run: |
          if docker manifest inspect yagnesh.jariwala.com:30002/inventyv/production:v${{ env.VERSION }} > /dev/null 2>&1; then
            echo "Error: Image version v${{ env.VERSION }} already exists in the registry."
            exit 1
          fi

      - name: Log in to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login yagnesh.jariwala.com:30002 -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Old Image (if exists)
        continue-on-error: true
        run: docker pull yagnesh.jariwala.com:30002/inventyv/production:latest || echo "No existing image found"

      - name: Remove Old Image (if exists)
        continue-on-error: true
        run: docker rmi yagnesh.jariwala.com:30002/inventyv/production:latest || echo "No old image to remove"

      - name: Build the Docker Image
        run: |
          docker build -t yagnesh.jariwala.com:30002/inventyv/production:latest .
          docker tag yagnesh.jariwala.com:30002/inventyv/production:latest yagnesh.jariwala.com:30002/inventyv/production:v${{ env.VERSION }}

      - name: Push Docker Image
        run: |
          docker push yagnesh.jariwala.com:30002/inventyv/production:latest
          docker push yagnesh.jariwala.com:30002/inventyv/production:v${{ env.VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.PUB_SUB_PUBLISHER }}

      - name: Publish a message to Google Cloud Pub/Sub
        uses: miraliumre/actions-pubsub@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          topic_name: ${{ secrets.PUBSUB_TOPIC }}
          message: '{"type":"production", "version": "${{ env.VERSION }}"}'